{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Servicing API",
    "description": "API to get service details about customers"
  },
  "host": "host",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api/",
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Secured endpoints require a valid JWT token with appropriate claims.  The following syntax must be used in the 'Authorization' header : Bearer xxxxxx.yyyyyyy.zzzzzz"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/customer_accounts/{id}": {
      "get": {
        "tags": [
          "customer_accounts"
        ],
        "summary": "Retrieves customer information by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of customer to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 returns a customer account",
            "schema": {
              "$ref": "#/definitions/customer_account"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/service_accounts": {
      "get": {
        "tags": [
          "service_accounts"
        ],
        "summary": "Retrieves service account information by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service_account_id",
            "in": "query",
            "description": "id of service account to search by",
            "type": "string"
          },
          {
            "name": "customer_account_id",
            "in": "query",
            "description": "id of customer account to search by",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 returns a service account",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/service_account"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service Account not found"
          }
        }
      }
    },
    "/service_accounts/{id}": {
      "get": {
        "tags": [
          "service_accounts"
        ],
        "summary": "Retrieves service account information by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of service account to fetch",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 returns a service account",
            "schema": {
              "$ref": "#/definitions/service_account"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Service Account not found"
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Retrieves invoices by id or service acccount id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service_account_id",
            "in": "query",
            "description": "id of service account to fetch invoices for",
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "id of invoice to fetch",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 returns a list of invoices",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/invoice"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invoice not found"
          }
        }
      }
    },
    "/invoices/{service_account_id}/{invoice_id}": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Retrieves invoice by id and service acccount id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service_account_id",
            "in": "path",
            "required": true,
            "description": "id of service account to fetch invoices for",
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "description": "id of invoice to fetch",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 returns an invoice",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/invoice"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invoice not found"
          }
        }
      }
    },
    "/invoices/{service_account_id}/{invoice_id}/details": {
      "get": {
        "tags": [
          "invoices"
        ],
        "summary": "Retrieves invoice line items by id and service acccount id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service_account_id",
            "in": "path",
            "required": true,
            "description": "id of service account to fetch invoice line items for",
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "path",
            "required": true,
            "description": "id of invoice to fetch line items for",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 returns an array of invoice line items",
            "schema": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/invoice_line_item"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Invoice not found"
          }
        }
      }
    },
    "/address": {
      "post": {
        "tags": [
          "address"
        ],
        "summary": "Gets all addresses matching the given address information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of matching addresses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/service_location"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error_list"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "address not found"
          }
        }
      }
    }
  },
  "definitions": {
    "customer_account": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Date_Of_Birth": {
          "type": "string",
          "format": "date"
        },
        "Email": {
          "type": "string",
          "format": "email"
        },
        "Prefix": {
          "type": "string"
        },
        "Suffix": {
          "type": "string"
        },
        "First_Name": {
          "type": "string"
        },
        "Middle_Name": {
          "type": "string"
        },
        "Last_Name": {
          "type": "string"
        },
        "Language": {
          "type": "string"
        },
        "Drivers_License": {
          "type": "object",
          "properties": {
            "Number": {
              "type": "string"
            },
            "State": {
              "type": "string"
            }
          }
        },
        "AlternateID": {
          "type": "object",
          "properties": {
            "Number": "string",
            "Type": {
              "type": "string",
              "enum": [
                "None",
                "StateId",
                "Passport",
                "Visa",
                "ResidentCard",
                "MilitaryId",
                "BirthCertificate",
                "MatriculaConsular"
              ]
            }
          }
        },
        "Social_Security_Number": {
          "type": "string"
        },
        "Masked_Social_Security_Number": {
          "type": "string"
        },
        "Past_Due": {
          "type": "number"
        },
        "Bad_Debt_Balance": {
          "type": "number"
        },
        "Pledge_On_Entity": {
          "type": "boolean"
        },
        "Primary_Phone": {
          "type": "object",
          "properties": {
            "Type": {
              "type": "string",
              "enum": [
                "Landline",
                "Mobile"
              ]
            },
            "Area_Code": {
              "type": "string"
            },
            "Number": {
              "type": "string"
            },
            "Extension": {
              "type": "string"
            },
            "Agree_To_Marketing": {
              "type": "boolean"
            }
          }
        },
        "EnrolledInShareAndSave": {
          "type": "boolean"
        }
      }
    },
    "service_account": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Customer_Account_Id": {
          "type": "string"
        },
        "Past_Due": {
          "type": "number"
        },
        "Current_Due": {
          "type": "number"
        },
        "Deposit_Balance": {
          "type": "number"
        },
        "UAN": {
          "type": "string"
        },
        "TDU_Name": {
          "type": "string"
        },
        "TDU_DUNS_Number": {
          "type": "string"
        },
        "Service_Address": {
          "type": "object",
          "properties": {
            "Line_1": {
              "type": "string"
            },
            "Line_2": {
              "type": "string"
            },
            "City": {
              "type": "string",
              "pattern": "^[A-Za-z\\s\\-\\.]*$"
            },
            "State": {
              "type": "string",
              "enum": [
                "AL",
                "AK",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DC",
                "DE",
                "FL",
                "GA",
                "HI",
                "IA",
                "ID",
                "IL",
                "IN",
                "KS",
                "KY",
                "LA",
                "MA",
                "MD",
                "ME",
                "MI",
                "MN",
                "MO",
                "MS",
                "MT",
                "NC",
                "NE",
                "NH",
                "NJ",
                "NM",
                "NV",
                "NY",
                "ND",
                "OH",
                "OK",
                "OR",
                "PA",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VT",
                "VA",
                "WA",
                "WI",
                "WV",
                "WY"
              ]
            },
            "Zip": {
              "type": "string",
              "pattern": "^\\d{5}$"
            },
            "Zip_4": {
              "type": "string",
              "pattern": "^\\d{4}$"
            }
          },
          "required": [
            "Line_1",
            "City",
            "State",
            "Zip"
          ]
        },
        "Mailing_Address": {
          "type": "object",
          "properties": {
            "Line_1": {
              "type": "string"
            },
            "Line_2": {
              "type": "string"
            },
            "City": {
              "type": "string",
              "pattern": "^[A-Za-z\\s\\-\\.]*$"
            },
            "State": {
              "type": "string",
              "enum": [
                "AL",
                "AK",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DC",
                "DE",
                "FL",
                "GA",
                "HI",
                "IA",
                "ID",
                "IL",
                "IN",
                "KS",
                "KY",
                "LA",
                "MA",
                "MD",
                "ME",
                "MI",
                "MN",
                "MO",
                "MS",
                "MT",
                "NC",
                "NE",
                "NH",
                "NJ",
                "NM",
                "NV",
                "NY",
                "ND",
                "OH",
                "OK",
                "OR",
                "PA",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VT",
                "VA",
                "WA",
                "WI",
                "WV",
                "WY"
              ]
            },
            "Zip": {
              "type": "string",
              "pattern": "^\\d{5}$"
            },
            "Zip_4": {
              "type": "string",
              "pattern": "^\\d{4}$"
            }
          },
          "required": [
            "Line_1",
            "City",
            "State",
            "Zip"
          ]
        },
        "Paperless_CEN": {
          "type": "boolean"
        },
        "Paperless_Billing": {
          "type": "boolean"
        },
        "Budget_Billing": {
          "type": "boolean"
        },
        "Service_Stop_Request_date": {
          "type": "string",
          "format": "date-time"
        },
        "Status": {
          "type": "string",
          "enum": [
            "None",
            "Signed_Up",
            "Active",
            "Temporarily_Inactive",
            "Disconnected",
            "Suspended",
            "Voided",
            "Unapproved",
            "Rejected",
            "Approved",
            "Closed"
          ]
        },
        "Terminate_Switch": {
          "type": "boolean"
        },
        "Switch_Hold": {
          "type": "boolean"
        },
        "Service_Start_Date": {
          "type": "string",
          "format": "date-time"
        },
        "Service_Stop_Date": {
          "type": "string",
          "format": "date-time"
        },
        "Contract_Start_Date": {
          "type": "string",
          "format": "date-time"
        },
        "Contract_End_Date": {
          "type": "string",
          "format": "date-time"
        },
        "Is_Auto_Bill_Pay": {
          "type": "boolean"
        },
        "PayMethodId": {
          "type": "integer"
        },
        "AutoPayConfigId": {
          "type": "integer"
        },
        "Is_Happiness_Guaranteed": {
          "type": "boolean"
        },
        "Average_Usage": {
          "type": "integer"
        },
        "Zone": {
          "type": "string"
        },
        "Usage_Profile": {
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High",
            "Ultra_High"
          ]
        },
        "Current_Offer": {
          "type": "object",
          "properties": {
            "Rate_Code": {
              "type": "string"
            },
            "Client_Key": {
              "type": "string"
            },
            "Product_Name": {
              "type": "string"
            },
            "Product_Description": {
              "type": "string"
            },
            "RateAt500kwh": {
              "type": "number"
            },
            "RateAt1000kwh": {
              "type": "number"
            },
            "RateAt2000kwh": {
              "type": "number"
            },
            "Term": {
              "type": "integer"
            },
            "TDU_Name": {
              "type": "string"
            },
            "TDU_DUNS_Number": {
              "type": "string"
            },
            "Meter_Charge": {
              "type": "number"
            },
            "Delivery_Charge": {
              "type": "number"
            },
            "Family": {
              "type": "string",
              "enum": [
                "LEVEL_1",
                "LEVEL_2",
                "LEVEL_3",
                "LEVEL_4",
                "LEVEL_5"
              ]
            },
            "Type": {
              "type": "string",
              "enum": [
                "Acquisition",
                "Renewal"
              ]
            },
            "Early_Termination_Fee": {
              "type": "number"
            },
            "Base_Charge": {
              "type": "number"
            },
            "Energy_Charges": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "Min": {
                    "type": "integer"
                  },
                  "Max": {
                    "type": "integer"
                  },
                  "Amount": {
                    "type": "number"
                  }
                }
              }
            },
            "Usage_Credits": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "Min": {
                    "type": "integer"
                  },
                  "Max": {
                    "type": "integer"
                  },
                  "Amount": {
                    "type": "number"
                  }
                }
              }
            },
            "Usage_Charges": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "Min": {
                    "type": "integer"
                  },
                  "Max": {
                    "type": "integer"
                  },
                  "Amount": {
                    "type": "number"
                  }
                }
              }
            },
            "Start_Date": {
              "type": "string",
              "format": "date-time"
            },
            "End_Date": {
              "type": "string",
              "format": "date-time"
            },
            "Partner_Info": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "Partner": {
                    "type": "object",
                    "properties": {
                      "Id": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "Description": {
                        "type": "string"
                      },
                      "Billing_Code": {
                        "type": "string"
                      },
                      "Creation_Time": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "Date_Created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "Date_Last_Modified": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  "Code": {
                    "type": "string"
                  }
                }
              }
            },
            "Featured_Usage_Level": {
              "type": "string"
            },
            "IsHoldOverRate": {
              "type": "boolean"
            },
            "IsLegacyOffer": {
              "type": "boolean"
            },
            "IsFixed": {
              "type": "boolean"
            },
            "Has_Partner": {
              "type": "boolean"
            },
            "Cost_Components": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "Min": {
                    "type": "integer"
                  },
                  "Max": {
                    "type": "integer"
                  },
                  "Amount": {
                    "type": "number"
                  },
                  "Operation_Type": {
                    "type": "string",
                    "enum": [
                      "Additive",
                      "Multiplicative"
                    ]
                  },
                  "IsCompound": {
                    "type": "boolean"
                  },
                  "TimeOfUseInterval": {
                    "type": "string"
                  },
                  "DisplayContent": {
                    "type": "string"
                  }
                }
              }
            },
            "Is_BOGO": {
              "type": "boolean"
            },
            "Is_TOU": {
              "type": "boolean"
            },
            "Is_RTP": {
              "type": "boolean"
            }
          }
        },
        "Offering_Name": {
          "type": "string"
        },
        "Tos_Fee_Id": {
          "type": "integer"
        }
      }
    },
    "invoice": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Invoice_Date": {
          "type": "string",
          "format": "date"
        },
        "Due_Date": {
          "type": "string",
          "format": "date"
        },
        "Usage": {
          "type": "integer"
        },
        "Total_Usage": {
          "type": "integer"
        },
        "Current_Charges": {
          "type": "number"
        },
        "Amount_Due": {
          "type": "number"
        },
        "Credit": {
          "type": "number"
        },
        "Balance_Forward": {
          "type": "number"
        }
      }
    },
    "invoice_line_item": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "Amount": {
          "type": "number"
        },
        "UOM": {
          "type": "string"
        },
        "Quantity": {
          "type": "string"
        },
        "Multiplier": {
          "type": "number"
        },
        "Min": {
          "type": "integer"
        },
        "Max": {
          "type": "integer"
        },
        "Bill_Line_Item_Type": {
          "type": "string",
          "enum": [
            "GEXA",
            "TDSP",
            "DEPOSITS",
            "TAX"
          ]
        },
        "Bill_Line_Item_Sub_Type": {
          "type": "string",
          "enum": [
            "None",
            "Energy"
          ]
        }
      }
    },
    "error_list": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "address": {
      "title": "address",
      "description": "Model for searching by address in AST",
      "type": "object",
      "properties": {
        "Line_1": {
          "type": "string"
        },
        "Line_2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "pattern": "^[A-Za-z\\s\\-\\.]*$"
        },
        "State": {
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "ND",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VA",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "Zip": {
          "type": "string",
          "pattern": "^\\d{5}$"
        },
        "Zip_4": {
          "type": "string",
          "pattern": "^\\d{4}$"
        }
      },
      "required": [
        "Line_1",
        "City",
        "State",
        "Zip"
      ]
    },
    "service_location": {
      "title": "service_location",
      "description": "Model for returing address search results in AST",
      "type": "object",
      "properties": {
        "Line_1": {
          "type": "string"
        },
        "Line_2": {
          "type": "string"
        },
        "City": {
          "type": "string",
          "pattern": "^[A-Za-z\\s\\-\\.]*$"
        },
        "State": {
          "type": "string",
          "enum": [
            "AL",
            "AK",
            "AR",
            "AZ",
            "CA",
            "CO",
            "CT",
            "DC",
            "DE",
            "FL",
            "GA",
            "HI",
            "IA",
            "ID",
            "IL",
            "IN",
            "KS",
            "KY",
            "LA",
            "MA",
            "MD",
            "ME",
            "MI",
            "MN",
            "MO",
            "MS",
            "MT",
            "NC",
            "NE",
            "NH",
            "NJ",
            "NM",
            "NV",
            "NY",
            "ND",
            "OH",
            "OK",
            "OR",
            "PA",
            "RI",
            "SC",
            "SD",
            "TN",
            "TX",
            "UT",
            "VT",
            "VA",
            "WA",
            "WI",
            "WV",
            "WY"
          ]
        },
        "Zip": {
          "type": "string",
          "pattern": "^\\d{5}$"
        },
        "Zip_4": {
          "type": "string",
          "pattern": "^\\d{4}$"
        },
        "Esiid": {
          "type": "string"
        },
        "Premise_Type": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Meter_Type": {
          "type": "string"
        },
        "Switch_Hold": {
          "type": "boolean"
        },
        "Debt_Hold": {
          "type": "boolean"
        }
      }
    }
  }
}